{"uuid":"a07ec9ca-c677-459c-92e0-2cc72007f983","historyId":"9ba83486abc5367dc592b9170ab287ab","testCaseId":"68166401a3946b2b10799912123036d","fullName":"src/test/resources/features/api/BookingByWaiter.feature:59","labels":[{"name":"tag","value":"Regression"},{"name":"host","value":"EPINHYDW12DF"},{"name":"thread","value":"20616@EPINHYDW12DF.main(1)"},{"name":"feature","value":"As a Waiter, I want to be able to manage reservations so I could control workload of the Restaurant."},{"name":"story","value":"Verify unsuccessful booking of a table by waiter for 0 number of guest"},{"name":"suite","value":"As a Waiter, I want to be able to manage reservations so I could control workload of the Restaurant."},{"name":"testClass","value":"Verify unsuccessful booking of a table by waiter for 0 number of guest"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/devmalya_saha/green-and-tasty/automation-qa/test/src/test/resources/features/api/BookingByWaiter.feature"},{"name":"package","value":"src.test.resources.features.api.BookingByWaiter_feature.As a Waiter, I want to be able to manage reservations so I could control workload of the Restaurant."}],"links":[],"name":"Verify unsuccessful booking of a table by waiter for 0 number of guest","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected [400] but found [500]","trace":"java.lang.AssertionError: expected [400] but found [500]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\r\n\tat com.greenandtasty.stepdefinitions.api.BookingByWaiter.theResponseStatusCodeMustBe(BookingByWaiter.java:73)\r\n\tat ✽.the response status-code must be 400(file:///C:/Users/devmalya_saha/green-and-tasty/automation-qa/test/src/test/resources/features/api/BookingByWaiter.feature:52)\r\n"},"stage":"finished","description":"  US_7_RESERVATION_OF_THE_TABLE_BY_WAITER","steps":[{"name":"Given the waiter is logged in","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747728315840,"stop":1747728315871},{"name":"When the waiter sends a POST request to the end point for booking a table \"table-204\" for \"null\" people from \"17:30\" to \"19:00\" at location \"location-002\" and for customer \"David Jack\"","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747728315871,"stop":1747728317585},{"name":"Then the response status-code must be 400","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected [400] but found [500]","trace":"java.lang.AssertionError: expected [400] but found [500]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\r\n\tat com.greenandtasty.stepdefinitions.api.BookingByWaiter.theResponseStatusCodeMustBe(BookingByWaiter.java:73)\r\n\tat ✽.the response status-code must be 400(file:///C:/Users/devmalya_saha/green-and-tasty/automation-qa/test/src/test/resources/features/api/BookingByWaiter.feature:52)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747728317585,"stop":1747728317585},{"name":"And the response body should have message \"Guest numbers must be greater than 0\"","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1747728317585,"stop":1747728317585}],"attachments":[],"parameters":[{"name":"numberOfGuest","value":"null"}],"start":1747728315840,"stop":1747728319395}